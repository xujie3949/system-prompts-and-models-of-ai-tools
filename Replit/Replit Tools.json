{
  "tools": [
    {
      "name": "restart_workflow",
      "description": "重启（或启动）一个工作流。",
      "parameters": {
        "properties": {
          "name": {
            "description": "工作流的名称。",
            "type": "string"
          }
        },
        "required": ["name"],
        "type": "object"
      }
    },
    {
      "name": "search_filesystem",
      "description": "此工具搜索并打开代码库中的相关文件",
      "parameters": {
        "properties": {
          "class_names": {
            "default": [],
            "description": "在代码库中搜索的特定类名列表。区分大小写且仅支持完全匹配。用于查找特定类定义或其使用情况。",
            "items": {"type": "string"},
            "type": "array"
          },
          "code": {
            "default": [],
            "description": "在代码库中搜索的精确代码片段列表。用于查找特定实现或模式。每个片段应为完整的代码片段，而非仅关键字。",
            "items": {"type": "string"},
            "type": "array"
          },
          "function_names": {
            "default": [],
            "description": "搜索的特定函数或方法名称列表。区分大小写且仅支持完全匹配。用于定位函数定义或其在整个代码中的调用。",
            "items": {"type": "string"},
            "type": "array"
          },
          "query_description": {
            "anyOf": [{"type": "string"}, {"type": "null"}],
            "default": null,
            "description": "执行语义相似性搜索的自然语言查询。使用简单英语描述您要查找的内容，例如“查找数据库连接中的错误处理”或“定位身份验证中间件实现”。"
          }
        },
        "type": "object"
      }
    },
    {
      "name": "packager_tool",
      "description": "安装语言（如果需要）并安装或卸载库或项目依赖项列表。使用此工具安装依赖项，而不是执行shell命令或手动编辑文件。使用此工具时，language_or_system=`system`以添加系统依赖项，而不是使用`apt install`。首次安装库时还会自动创建必要的项目文件（如'package.json'、'cargo.toml'等）。这将自动重启所有工作流。",
      "parameters": {
        "properties": {
          "dependency_list": {
            "default": [],
            "description": "要安装的系统依赖项或库列表。系统依赖项是Nixpkgs包集合中的包（属性路径）。示例系统依赖项：['jq', 'ffmpeg', 'imagemagick']。库是特定编程语言的包。示例库：['express'], ['lodash']。",
            "items": {"type": "string"},
            "type": "array"
          },
          "install_or_uninstall": {
            "description": "是安装还是卸载。",
            "enum": ["install", "uninstall"],
            "type": "string"
          },
          "language_or_system": {
            "description": "要安装/卸载库的语言，例如'nodejs'、'bun'、'python'等。使用`system`安装/卸载系统依赖项。",
            "type": "string"
          }
        },
        "required": ["install_or_uninstall", "language_or_system"],
        "type": "object"
      }
    },
    {
      "name": "programming_language_install_tool",
      "description": "如果程序无法运行，可能是因为未安装编程语言。使用programming_language_install_tool进行安装。如果需要使用Python，请在programming_languages中包含'python-3.11'。对于Python 3.10，使用'python-3.10'。如果需要使用Node.js，请在programming_languages中包含'nodejs-20'。对于Node.js 18，使用'nodejs-18'。注意，这将同时安装语言的包管理器，因此无需单独安装。",
      "parameters": {
        "properties": {
          "programming_languages": {
            "description": "要安装的编程语言的ID",
            "items": {"type": "string"},
            "type": "array"
          }
        },
        "required": ["programming_languages"],
        "type": "object"
      }
    },
    {
      "name": "create_postgresql_database_tool",
      "description": "当项目需要PostgreSQL数据库时，可以使用此工具为其创建数据库。成功创建数据库后，您将可以访问以下环境变量：DATABASE_URL、PGPORT、PGUSER、PGPASSWORD、PGDATABASE、PGHOST\n您可以在项目中使用这些环境变量连接到数据库。",
      "parameters": {
        "properties": {},
        "type": "object"
      }
    },
    {
      "name": "check_database_status",
      "description": "检查给定数据库是否可用且可访问。\n此工具用于验证指定数据库的连接和状态。",
      "parameters": {
        "properties": {},
        "type": "object"
      }
    },
    {
      "name": "str_replace_editor",
      "description": "用于查看、创建和编辑文件的自定义编辑工具\n* 状态在命令调用和与用户的讨论之间持久化\n* 如果`path`是文件，`view`显示应用`cat -n`的结果。如果`path`是目录，`view`列出非隐藏文件和目录，最多2层深度\n* 如果指定的`path`已作为文件存在，则不能使用`create`命令\n* 如果`command`生成长输出，将被截断并标记为`<response clipped>`\n* `undo_edit`命令将撤销对`path`处文件的最后一次编辑\n\n使用`str_replace`命令的注意事项：\n* `old_str`参数应与原始文件中的一个或多个连续行完全匹配。注意空格！\n* 如果`old_str`参数在文件中不唯一，则不会执行替换。确保在`old_str`中包含足够的上下文以使其唯一\n* `new_str`参数应包含应替换`old_str`的编辑行",
      "parameters": {
        "properties": {
          "command": {
            "description": "要运行的命令。允许的选项为：`view`、`create`、`str_replace`、`insert`、`undo_edit`。",
            "enum": ["view", "create", "str_replace", "insert", "undo_edit"],
            "type": "string"
          },
          "file_text": {
            "description": "`create`命令的必需参数，包含要创建的文件内容。",
            "type": "string"
          },
          "insert_line": {
            "description": "`insert`命令的必需参数。`new_str`将插入到`path`的`insert_line`行之后。",
            "type": "integer"
          },
          "new_str": {
            "description": "`str_replace`命令的可选参数，包含新字符串（如果未提供，则不添加任何字符串）。`insert`命令的必需参数，包含要插入的字符串。",
            "type": "string"
          },
          "old_str": {
            "description": "`str_replace`命令的必需参数，包含`path`中要替换的字符串。",
            "type": "string"
          },
          "path": {
            "description": "文件或目录的绝对路径，例如`/repo/file.py`或`/repo`。",
            "type": "string"
          },
          "view_range": {
            "description": "当`path`指向文件时，`view`命令的可选参数。如果未提供，则显示整个文件。如果提供，文件将在指定的行号范围内显示，例如[11, 12]将显示第11和12行。索引从1开始。设置`[start_line, -1]`显示从`start_line`到文件末尾的所有行。",
            "items": {"type": "integer"},
            "type": "array"
          }
        },
        "required": ["command", "path"],
        "type": "object"
      }
    },
    {
      "name": "bash",
      "description": "在bash shell中运行命令\n* 调用此工具时，\"command\"参数的内容不需要进行XML转义。\n* 您可以通过apt和pip访问常见Linux和Python包的镜像。\n* 状态在命令调用和与用户的讨论之间持久化。\n* 要检查文件的特定行范围，例如第10-25行，请尝试'sed -n 10,25p /path/to/the/file'。\n* 请避免可能产生大量输出的命令。\n* 请在后台运行长时间运行的命令，例如'sleep 10 &'或在后台启动服务器。",
      "parameters": {
        "properties": {
          "command": {
            "description": "要运行的bash命令。除非工具正在重启，否则必需。",
            "type": "string"
          },
          "restart": {
            "description": "指定true将重启此工具。否则，请勿指定此参数。",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    },
    {
      "name": "workflows_set_run_config_tool",
      "description": "配置执行shell命令的后台任务。\n这对于启动开发服务器、构建过程或项目所需的任何其他长时间运行的任务非常有用。\n如果是服务器，请确保在`wait_for_port`字段中指定其监听的端口号，以便在工作流被认为已启动之前等待服务器准备好接受连接。\n\n示例：\n- 对于Node.js服务器：将`name`设置为'Server'，`command`设置为'npm run dev'，`wait_for_port`设置为5000\n- 对于Python脚本：将name设置为'Data Processing'，command设置为'python process_data.py'\n\n可以配置多个任务，它们将在项目启动时并行执行。\n配置任务后，它将自动在后台开始执行。\n\n始终在端口5000上提供应用程序，即使该端口出现问题：这是唯一未被防火墙阻止的端口。",
      "parameters": {
        "properties": {
          "command": {
            "description": "要执行的shell命令。项目启动时将在后台运行。",
            "type": "string"
          },
          "name": {
            "description": "用于标识命令的唯一名称。这将用于跟踪命令。",
            "type": "string"
          },
          "wait_for_port": {
            "anyOf": [{"type": "integer"}, {"type": "null"}],
            "default": null,
            "description": "如果命令启动的进程监听某个端口，请在此处指定端口号。\n这允许系统在认为命令完全启动之前等待端口准备就绪。"
          }
        },
        "required": ["name", "command"],
        "type": "object"
      }
    },
    {
      "name": "workflows_remove_run_config_tool",
      "description": "移除先前添加的命名命令",
      "parameters": {
        "properties": {
          "name": {
            "description": "要移除的命令的名称。",
            "type": "string"
          }
        },
        "required": ["name"],
        "type": "object"
      }
    },
    {
      "name": "execute_sql_tool",
      "description": "此工具允许您执行SQL查询、修复数据库错误并访问数据库模式。\n\n## 使用规则：\n1. 始终优先使用此工具修复数据库错误，而不是通过编写代码如db.drop_table(table_name)来修复\n2. 提供清晰、格式良好的SQL查询，语法正确\n3. 专注于数据库交互、数据操作和查询优化\n\n## 何时使用：\n1. 修复和排查数据库相关问题\n2. 探索数据库模式及关系\n3. 更新或修改数据库中的数据\n4. 运行临时单次使用的SQL代码\n\n## 何时不使用：\n1. 非SQL数据库操作（NoSQL、基于文件的数据库）\n2. 数据库迁移。请使用Drizzle或flask-migrate等迁移工具\n\n## 示例用法：\n\n### 示例1：查看数据库信息\nsql_query: SELECT * FROM customers WHERE region = 'North';\n\n### 示例2：运行临时SQL查询\nsql_query:  EXPLAIN ANALYZE SELECT orders.*, customers.name\n            FROM orders\n            JOIN customers ON orders.customer_id = customers.id;\n\n### 示例3：向数据库中插入数据\nsql_query:  INSERT INTO products (name, price, category)\n            VALUES ('New Product', 29.99, 'Electronics');",
      "parameters": {
        "properties": {
          "sql_query": {
            "description": "要执行的SQL查询",
            "type": "string"
          }
        },
        "required": ["sql_query"],
        "type": "object"
      }
    },
    {
      "name": "suggest_deploy",
      "description": "当您认为项目已准备好部署时调用此函数。\n这将向用户建议可以部署其项目。\n这是一个终端操作 - 一旦调用，您的任务即完成，\n您不应采取任何进一步操作来验证部署。\n部署过程将由Replit Deployments自动处理。\n\n## 使用规则：\n1. 在验证项目按预期工作后使用此工具。\n2. 部署过程将由Replit Deployments自动处理。\n\n## 何时使用：\n1. 当项目准备好部署时。\n2. 当用户要求部署项目时。\n\n## 更多信息：\n- 用户需要手动启动部署。\n- Replit Deployments将处理应用程序构建、托管、TLS、健康检查。\n- 一旦调用此工具，无需执行任何后续步骤或验证。\n- 部署后，应用程序将在`.replit.app`域名下可用，\n  或如果配置了自定义域名，则在该域名下可用。",
      "parameters": {
        "description": "空参数类，因为suggest deploy不需要任何参数。",
        "properties": {},
        "type": "object"
      }
    },
    {
      "name": "report_progress",
      "description": "在用户明确确认主要功能或任务完成时调用此函数。\n未经用户确认请勿调用。\n在'summary'字段中提供所完成内容的简明摘要。\n此工具将询问用户下一步操作。调用此工具后请勿执行任何操作。",
      "parameters": {
        "properties": {
          "summary": {
            "description": "用最多5项总结您最近的更改。非常简洁，使用不超过30个单词。将内容分成多行。\n在每项已完成的内容前加上\u2713，进行中的内容前加上\u2192，非常简短，不要超过50个单词。不要使用表情符号。\n使用与用户语言匹配的简单日常语言。避免技术术语，因为用户是非技术人员。\n最后询问用户下一步操作。",
            "type": "string"
          }
        },
        "required": ["summary"],
        "type": "object"
      }
    },
    {
      "name": "web_application_feedback_tool",
      "description": "此工具捕获屏幕截图并检查日志以验证Web应用程序是否在Replit工作流中运行。\n\n如果应用程序正在运行，工具将显示应用程序，向用户提问，并等待用户的响应。\n当应用程序处于良好状态且请求的任务完成时使用此工具，以避免不必要的延迟。",
      "parameters": {
        "properties": {
          "query": {
            "description": "您将向用户提出的问题。\n\n使用与用户语言匹配的简单日常语言。避免技术术语，因为用户是非技术人员。\n用最多5项总结您最近的更改。非常简洁，使用不超过30个单词。将内容分成多行。\n在每项已完成的内容前加上\u2713，进行中的内容前加上\u2192，非常简短，不要超过50个单词。不要使用表情符号。\n每次仅限提出一个问题。\n您可以访问工作流状态、控制台日志和屏幕截图 - 自行检索这些信息，而不是询问用户。\n询问用户输入或确认下一步操作。不要请求详细信息。",
            "type": "string"
          },
          "website_route": {
            "anyOf": [{"type": "string"}, {"type": "null"}],
            "default": null,
            "description": "您询问的网站的特定路由或路径，如果与根URL（'/'）不同。包含前导斜杠。例如：'/dashboard'或'/products/list'"
          },
          "workflow_name": {
            "description": "运行服务器的工作流名称。用于确定网站的端口。",
            "type": "string"
          }
        },
        "required": ["query", "workflow_name"],
        "type": "object"
      }
    },
    {
      "name": "shell_command_application_feedback_tool",
      "description": "此工具允许您执行交互式shell命令，并就CLI应用程序或交互式Python程序的输出或行为提问。\n\n## 使用规则：\n1. 提供清晰、简洁的交互式命令以执行，并就结果或交互提出具体问题。\n2. 每次就交互行为或输出提出一个问题。\n3. 专注于交互功能、用户输入/输出和实时行为。\n4. 指定要运行的精确命令，包括启动交互会话所需的任何参数或标志。\n5. 当询问Python程序时，包含文件名和启动交互模式所需的任何命令行参数。\n\n## 何时使用：\n1. 测试和验证需要用户输入和实时交互的交互式CLI应用程序或Python程序的功能。\n2. 检查程序在交互式shell环境中是否正确响应用户输入。\n\n## 何时不使用：\n1. 不需要用户输入的非交互式命令或脚本。\n2. API测试或基于Web的交互。\n3. 打开原生桌面VNC窗口的shell命令。\n\n## 示例用法：\n命令：python interactive_script.py\n问题：当提示时，您能否输入您的姓名并收到个性化问候？\n\n命令：./text_adventure_game\n问题：您能否做出影响故事进展的选择？\n\n命令：python -i data_analysis.py\n问题：您能否交互式查询和操作加载的数据集？",
      "parameters": {
        "properties": {
          "query": {
            "description": "关于shell应用程序的问题或反馈请求",
            "type": "string"
          },
          "shell_command": {
            "description": "在请求反馈之前要执行的shell命令",
            "type": "string"
          },
          "workflow_name": {
            "description": "此命令的工作流名称，必须是现有工作流。",
            "type": "string"
          }
        },
        "required": ["query", "shell_command", "workflow_name"],
        "type": "object"
      }
    },
    {
      "name": "vnc_window_application_feedback",
      "description": "此工具允许您执行交互式桌面应用程序，该应用程序将通过VNC访问并显示给用户。\n您可以就该应用程序的输出或行为提问。\n\n## 使用规则：\n1. 提供清晰、简洁的命令以执行应用程序，并就结果或交互提出具体问题。\n2. 每次就交互行为或输出提出一个问题。\n3. 专注于交互功能、用户输入/输出和实时行为。\n4. 指定要运行的精确命令，包括任何必要的参数或标志。\n\n## 何时使用：\n1. 测试和验证需要用户输入和实时交互的交互式桌面程序的功能。\n2. 检查程序在附加的VNC窗口中是否正确响应用户输入。\n\n## 何时不使用：\n1. 不需要用户输入的非交互式命令或脚本。\n2. API测试或基于Web的交互。\n3. 不打开原生桌面VNC窗口的shell命令。\n\n## 示例用法：\n命令：python pygame_snake.py\n问题：键盘事件是否改变屏幕上蛇的方向？\n\n命令：./opencv_face_detection\n问题：您是否看到一张照片，检测到的脸部周围有绿色矩形？",
      "parameters": {
        "properties": {
          "query": {
            "description": "关于原生窗口应用程序的问题或反馈请求，通过VNC可见",
            "type": "string"
          },
          "vnc_execution_command": {
            "description": "在请求反馈之前要执行的VNC shell命令；此shell命令应生成桌面窗口",
            "type": "string"
          },
          "workflow_name": {
            "description": "此VNC shell命令的工作流名称，必须是现有工作流。",
            "type": "string"
          }
        },
        "required": ["query", "vnc_execution_command", "workflow_name"],
        "type": "object"
      }
    },
    {
      "name": "ask_secrets",
      "description": "向用户询问项目所需的秘密API密钥。\n如果缺少秘密，请尽快使用此工具。\n秘密将被添加到环境变量中。\n此工具运行成本非常高。\n\n良好示例：\n- 要设置安全的Stripe支付，我们需要STRIPE_SECRET_KEY。\n  此密钥将用于安全处理支付和管理应用程序中的订阅。\n- 要启用SMS价格提醒，我们需要Twilio API凭据TWILIO_ACCOUNT_SID、\n  TWILIO_AUTH_TOKEN和TWILIO_PHONE_NUMBER。这些将用于在达到价格目标时发送SMS通知。\n- 要使用OpenAI模型构建应用程序，我们需要OPENAI_API_KEY。\n\n不良示例（请勿使用）：\n- PHONE_NUMBER、EMAIL_ADDRESS或PASSWORD\n    对于此类变量，应直接通过user_response工具询问用户。\n- REPLIT_DOMAINS或REPL_ID\n    这些秘密始终存在，因此无需询问。",
      "parameters": {
        "properties": {
          "secret_keys": {
            "description": "项目所需的秘密密钥标识符数组（例如[\"OPENAI_API_KEY\", \"GITHUB_TOKEN\"])",
            "items": {"type": "string"},
            "type": "array"
          },
          "user_message": {
            "description": "发送回用户的消息，解释需要这些秘密密钥的原因。如果您尚未解释，请简要介绍秘密密钥的一般概念，假设用户从未注册过API密钥。请以尊重的措辞提问。",
            "type": "string"
          }
        },
        "required": ["secret_keys", "user_message"],
        "type": "object"
      }
    },
    {
      "name": "check_secrets",
      "description": "检查给定秘密是否存在于环境中。\n此工具用于在不暴露实际值的情况下验证秘密的存在。",
      "parameters": {
        "properties": {
          "secret_keys": {
            "description": "要检查的环境中的秘密密钥。",
            "items": {"type": "string"},
            "type": "array"
          }
        },
        "required": ["secret_keys"],
        "type": "object"
      }
    }
  ],
  "internal_tags": [
    {
      "name": "View",
      "description": "包含文件系统信息和仓库详情"
    },
    {
      "name": "policy_spec",
      "description": "包含沟通、主动性和数据完整性政策"
    },
    {
      "name": "file_system",
      "description": "显示目录结构"
    },
    {
      "name": "repo_overview",
      "description": "包含代码摘要"
    },
    {
      "name": "important",
      "description": "包含关键政策提醒"
    },
    {
      "name": "workflow_console_logs",
      "description": "包含运行工作流的日志"
    },
    {
      "name": "automatic_updates",
      "description": "包含系统生成的更新"
    },
    {
      "name": "webview_console_logs",
      "description": "包含用户浏览器的日志"
    },
    {
      "name": "function_results",
      "description": "包含函数/工具调用的结果"
    }
  ]
}